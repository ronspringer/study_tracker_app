# Generated by Django on [DATE]

from django.db import migrations
from django.contrib.auth import get_user_model
from django.utils import timezone
from datetime import datetime, timedelta
import random

def create_initial_data(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Subject = apps.get_model('api', 'Subject')
    StudySession = apps.get_model('api', 'StudySession')

    superuser = User.objects.create_superuser(
        username='ronaldo.springer',
        email='ronaldospringer@gmail.com',
        password='superpassword',
        last_login=timezone.now()
    )
    regular_user = User.objects.create_user(
        username='tom.jones',
        email='tomjones@gmail.com',
        password='userpassword',
        last_login=timezone.now()
    )

    math = Subject.objects.create(user=regular_user, subject_name='Mathematics')
    history = Subject.objects.create(user=regular_user, subject_name='History')
    biology = Subject.objects.create(user=regular_user, subject_name='Biology')

    def create_sessions(subject, start_hour, end_hour, min_duration, max_duration, num_records):
        start_date = timezone.now() - timedelta(days=num_records)
        for i in range(num_records):
            session_hour = random.randint(start_hour, end_hour - 1)
            session_duration = random.randint(min_duration, max_duration)

            # Randomly decide whether to create a session (simulate attendance)
            if random.random() < 0.8:  # 80% chance of attending the session
                # Adjust to user's timezone (UTC+4)
                session_datetime = timezone.make_aware(datetime(
                    start_date.year, start_date.month, start_date.day, session_hour, 0
                )) + timedelta(days=i) + timedelta(hours=4)  # Adjust for UTC+4
                
                StudySession.objects.create(
                    subject=subject,
                    session_date=session_datetime,
                    duration_minutes=session_duration,
                    notes=f'{subject.subject_name} session'
                )

    # Create 150 sessions for each subject with adjusted parameters
    create_sessions(math, start_hour=6, end_hour=12, min_duration=25, max_duration=30, num_records=20)
    create_sessions(history, start_hour=12, end_hour=18, min_duration=40, max_duration=45, num_records=20)
    create_sessions(biology, start_hour=0, end_hour=6, min_duration=50, max_duration=60, num_records=20)

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        ('api', '0002_alter_studysession_session_date'),
    ]

    operations = [
        migrations.RunPython(create_initial_data),
    ]
